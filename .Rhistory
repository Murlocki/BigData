#
fviz_nbclust(data_k, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, nstart = 5,K.max =13, B = 10)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, nstart = 5,K.max =13, B = 10)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, nstart = 5,K.max =13, B = 7)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, nstart = 5,K.max =5, B = 7)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, nstart = 5,K.max =10, B = 7)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, nstart = 5,K.max =11, B = 20)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, nstart = 5,K.max =11, B = 5)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, nstart = 5,K.max =12, B = 5)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
#Построили метод силуэта
fviz_nbclust(data_k, kmeans, method = "silhouette") +
labs(subtitle = "Silhouette method")
library (factoextra)
library (cluster)
fviz_nbclust(data_k, kmeans, method = "wss")
#Алгоритм на основе консенсуса
install.packages('parameters')
library(parameters)
n_clust <- n_clusters(data.frame(data_sc_norm[,-(length(colnames(data_sc_norm)))]),
package = c("easystats", "NbClust", "mclust"),
standardize = FALSE)
#Алгоритм на основе консенсуса
install.packages('parameters')
library(parameters)
n_clust <- n_clusters(data.frame(data_sc_norm[,-(length(colnames(data_sc_norm)))]),
package = c("easystats", "NbClust", "mclust"),
standardize = FALSE)
n_clust
plot(n_clust)
library(parameters)
fviz_nbclust(data, kmeans, method = "silhouette") +
labs(subtitle = "Silhouette method")
source('lab6/desc_analysis.R')
data_scaled = scale(data,center=mins,scale=maxs-mins)
data_scaled
data
library(BBmisc)
data_sc_norm = normalize(data_scaled,method="range",range=c(0,1))
data_sc_norm
data_k=data_sc_norm[,-(length(colnames(data_sc_norm)))]
data_k
#Построения локтя
library (factoextra)
library (cluster)
fviz_nbclust(data_k, kmeans, method = "wss")
fviz_nbclust(data, kmeans, method = "silhouette") +
labs(subtitle = "Silhouette method")
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, nstart = 5,K.max =12, B = 5)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, K.max =12, B = 5)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, mstart=10,K.max =12, B = 5)
gap_stat <- clusGap(data_k, FUN = kmeans, nstart=10,K.max =12, B = 5)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, K.max =12)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
set.seed(123)
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, K.max =12)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
#Построили метод силуэта
fviz_nbclust(data, kmeans, method = "silhouette") +
labs(subtitle = "Silhouette method")
set.seed(123)
fviz_nbclust(data, kmeans, method = "silhouette") +
labs(subtitle = "Silhouette method")
library (factoextra)
library (cluster)
fviz_nbclust(data_k, kmeans, method = "wss")
n_clust <- n_clusters(data_k,
package = c("easystats", "NbClust", "mclust"),
standardize = FALSE)
n_clust <- n_clusters(data_k,
package = c("easystats", "NbClust", "mclust"),
standardize = FALSE)
n_clust <- n_clusters(data.frame(data_sc_norm[,-(length(colnames(data_sc_norm)))]),
package = c("easystats", "NbClust", "mclust"),
standardize = FALSE)
n_clust
plot(n_clust)
n_clust <- n_clusters(data.frame(data_sc_norm[,-(length(colnames(data_sc_norm)))]),
package = c("easystats", "NbClust", "mclust"),
standardize = FALSE)
n_clust
plot(n_clust)
n_clust <- n_clusters(data.frame(data_k),
package = c("easystats", "NbClust", "mclust"),
standardize = FALSE)
n_clust
plot(n_clust)
n_clust <- n_clusters(data.frame(data_k),
package = c("easystats", "NbClust", "mclust"),
standardize = FALSE)
n_clust
plot(n_clust)
dist.datas=dist(data_sc_norm[,-(length(colnames(data_sc_norm)))])
labels_datas=data_sc_norm[,(length(colnames(data_sc_norm)))]
clust.datas=hclust(dist.datas,'ward.D')
plot(clust.datas,labels_datas,cex=0.5)
rect.hclust(clust.datas,k=2,border="red")
set.seed(123)
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, K.max =12)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
#Построили метод силуэта
set.seed(123)
fviz_nbclust(data, kmeans, method = "silhouette") +
labs(subtitle = "Silhouette method")
#Построения локтя
library (factoextra)
library (cluster)
fviz_nbclust(data_k, kmeans, method = "wss")
dist.datas=dist(data_sc_norm[,-(length(colnames(data_sc_norm)))])
labels_datas=data_sc_norm[,(length(colnames(data_sc_norm)))]
clust.datas=hclust(dist.datas,'ward.D')
plot(clust.datas,labels_datas,cex=0.5)
rect.hclust(clust.datas,k=3,border="red")
groups <- cutree(clust.datas, k=3)
g1=data_sc_norm[groups==1,]
g1
g2=data_sc_norm[groups==2,]
g2
g3=data_sc_norm[groups==3,]
g3
dist.datas=dist(data_sc_norm[,-(length(colnames(data_sc_norm)))])
labels_datas=data_sc_norm[,(length(colnames(data_sc_norm)))]
clust.datas=hclust(dist.datas,'ward.D')
plot(clust.datas,labels_datas,cex=0.5)
rect.hclust(clust.datas,k=4,border="red")
g4=data_sc_norm[groups==4,]
g4
g4
groups <- cutree(clust.datas, k=4)
g1=data_sc_norm[groups==1,]
g1
g2=data_sc_norm[groups==2,]
g2
g3=data_sc_norm[groups==3,]
g3
g4=data_sc_norm[groups==4,]
g4
g1=data_sc_norm[groups==1,]
g1
g2=data_sc_norm[groups==2,]
g2
rect.hclust(clust.datas,k=3,border="red")
groups <- cutree(clust.datas, k=3)
g1=data_sc_norm[groups==1,]
g1
options(max.print=999999)
g1
dist.datas=dist(data_k)
labels_datas=data_sc_norm[,(length(colnames(data_sc_norm)))]
clust.datas=hclust(dist.datas,'ward.D')
plot(clust.datas,labels_datas,cex=0.5)
rect.hclust(clust.datas,k=3,border="red")
groups <- cutree(clust.datas, k=3)
g1=data_sc_norm[groups==1,]
g1
groups <- cutree(clust.datas, k=8)
g1=data_sc_norm[groups==1,]
g1
rect.hclust(clust.datas,k=8,border="red")
dist.datas=dist(data_k)
labels_datas=data_sc_norm[,(length(colnames(data_sc_norm)))]
clust.datas=hclust(dist.datas,'ward.D')
plot(clust.datas,labels_datas,cex=0.5)
rect.hclust(clust.datas,k=8,border="red")
g1=data[groups==1,]
g1=data[groups==1,]
g1
g2=data[groups==2,]
g2
dist.datas=dist(data_k)
labels_datas=data_sc_norm[,(length(colnames(data_sc_norm)))]
clust.datas=hclust(dist.datas,'ward.D')
plot(clust.datas,labels_datas,cex=0.5)
rect.hclust(clust.datas,k=2,border="red")
groups <- cutree(clust.datas, k=2)
g1=data[groups==1,]
g1
dist.datas=dist(data_k)
labels_datas=data_sc_norm[,(length(colnames(data_sc_norm)))]
clust.datas=hclust(dist.datas,'ward.D')
plot(clust.datas,labels_datas,cex=0.5)
rect.hclust(clust.datas,k=5,border="red")
groups <- cutree(clust.datas, k=5)
g1=data[groups==1,]
g1
g2=data[groups==2,]
g2
source('lab6/desc_analysis.R')
source('lab6/desc_analysis.R')
data_scaled = scale(data,center=mins,scale=maxs-mins)
data_scaled
data
library(BBmisc)
data_sc_norm = normalize(data_scaled,method="range",range=c(0,1))
data_sc_norm
data_k=data_sc_norm[,-(length(colnames(data_sc_norm)))]
data_k
library (factoextra)
library (cluster)
fviz_nbclust(data_k, kmeans, method = "wss")
set.seed(123)
fviz_nbclust(data_k, kmeans, method = "silhouette") +
labs(subtitle = "Silhouette method")
set.seed(123)
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, K.max =12)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
#Алгоритм на основе консенсуса
install.packages('parameters')
library(parameters)
n_clust <- n_clusters(data.frame(data_k),
package = c("easystats", "NbClust", "mclust"),
standardize = FALSE)
n_clust
plot(n_clust)
#Построения локтя
library (factoextra)
library (cluster)
fviz_nbclust(data_k, kmeans, method = "wss")
#Построили метод силуэта
set.seed(123)
fviz_nbclust(data_k, kmeans, method = "silhouette") +
labs(subtitle = "Silhouette method")
set.seed(123)
fviz_nbclust(data, kmeans, method = "wss")
gap_stat <- clusGap(data_k, FUN = kmeans, K.max =12)
#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)
library(parameters)
n_clust <- n_clusters(data.frame(data_k),
package = c("easystats", "NbClust", "mclust"),
standardize = FALSE)
n_clust
plot(n_clust)
dist.datas=dist(data_k)
labels_datas=data_sc_norm[,(length(colnames(data_sc_norm)))]
clust.datas=hclust(dist.datas,'ward.D')
plot(clust.datas,labels_datas,cex=0.5)
rect.hclust(clust.datas,k=5,border="red")
dist.datas=dist(data_k)
labels_datas=data_sc_norm[,(length(colnames(data_sc_norm)))]
clust.datas=hclust(dist.datas,'ward.D')
plot(clust.datas,labels_datas,cex=0.5)
rect.hclust(clust.datas,k=5,border="red")
groups <- cutree(clust.datas, k=5)
g1=data[groups==1,]
g1
g2=data[groups==2,]
g2
g3=data_sc_norm[groups==3,]
g3
dist.datas=dist(data_k)
labels_datas=data_sc_norm[,(length(colnames(data_sc_norm)))]
clust.datas=hclust(dist.datas,'ward.D')
plot(clust.datas,labels_datas,cex=0.5)
rect.hclust(clust.datas,k=10,border="red")
groups <- cutree(clust.datas, k=10)
g1=data[groups==1,]
g1
g2=data[groups==2,]
g2
g3=data_sc_norm[groups==3,]
g3
dist.datas=dist(data_k)
labels_datas=data_sc_norm[,(length(colnames(data_sc_norm)))]
clust.datas=hclust(dist.datas,'ward.D')
plot(clust.datas,labels_datas,cex=0.5)
rect.hclust(clust.datas,k=20,border="red")
groups <- cutree(clust.datas, k=20)
g1=data[groups==1,]
g1
g2=data[groups==2,]
g2
dist.datas=dist(data_k)
labels_datas=data_sc_norm[,(length(colnames(data_sc_norm)))]
clust.datas=hclust(dist.datas,'ward.D')
plot(clust.datas,labels_datas,cex=0.5)
rect.hclust(clust.datas,k=5,border="red")
groups <- cutree(clust.datas, k=5)
g1=data[groups==1,]
g1
g2=data[groups==2,]
g2
g3
g3=data[groups==3,]
g3
g5=data[groups==5,]
g5
dist.datas=dist(data_k)
labels_datas=data_sc_norm[,(length(colnames(data_sc_norm)))]
clust.datas=hclust(dist.datas,'ward.D')
plot(clust.datas,labels_datas,cex=0.5)
rect.hclust(clust.datas,k=5,border="red")
n_clust <- n_clusters(data.frame(data_k),
package = c("easystats", "NbClust", "mclust"),
standardize = FALSE)
n_clust
plot(n_clust)
df = t(t(data.frame(g1,g2,g3,g4,g5)))
df = t(t(data.frame(colMeans(g1),colMeans(g2),colMeans(g3),colMeans(g4),colMeans(g5))))
df
barplot(df,main='heart illnesses',beside=TRUE)
barplot(df,main='heart illnesses',col=rainbow(length(df)),beside=TRUE)
g1=data_k[groups==1,]
g1
g2=data_k[groups==2,]
g2
g3=data_k[groups==3,]
g3
g4=data_k[groups==4,]
g4
g5=data_k[groups==5,]
g5
df = t(t(data.frame(colMeans(g1),colMeans(g2),colMeans(g3),colMeans(g4),colMeans(g5))))
df
barplot(df,main='heart illnesses',col=rainbow(length(df)),beside=TRUE)
barplot(df,main='heart illnesses',col=rainbow(length(data_k)),beside=TRUE)
barplot(df,main='heart illnesses',col=rainbow(length(df)),beside=TRUE)
barplot(df,main='heart illnesses',lwd=5,col=rainbow(length(df)),beside=TRUE)
barplot(df,main='heart illnesses',col=rainbow(length(df)),beside=TRUE)
barplot(df,main='heart illnesses',col=c("red","green","blue","yellow"),beside=TRUE)
barplot(df,main='heart illnesses',col=rainbow(13),beside=TRUE)
axis(2,at=0:5,labels=0:5)
barplot(df,main='heart illnesses',col=rainbow(13),beside=TRUE)
axis(2,at=0:5,labels=0:5)
barplot(df,main='heart illnesses',col=rainbow(13),beside=TRUE)
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
legend("top", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n")
legend("left", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n")
legend("botton", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n")
legend("bottom", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n")
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
legend("bottomright", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n")
pair(mfrow=c(2,1))
par(mfrow=c(2,1))
par(mfrow=c(2,1))
df = t(t(data.frame(colMeans(g1),colMeans(g2),colMeans(g3),colMeans(g4),colMeans(g5))))
df
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
plot()
legend("bottomright", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n")
plot(1,1)
legend("bottomright", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n")
df = t(t(data.frame(colMeans(g1),colMeans(g2),colMeans(g3),colMeans(g4),colMeans(g5))))
df
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)+theme(
legend("bottomright", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n"))
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)+theme(
legend("right", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n"))
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)+theme(
legend("right", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n"))
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)+theme(
legend("right", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n"))
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)+theme(
legend("right", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n",inset=c(-0.2,0)))
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
legend("right", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n",inset=c(-0.2,0))
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
legend("right", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n",inset=c(-0.2,0))
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
legend("right", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n",inset=c(-0.1,0))
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
legend("right", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n",inset=c(-0.1,0))
layout(matrix(1:2,nrow=1,ncol=2))
df = t(t(data.frame(colMeans(g1),colMeans(g2),colMeans(g3),colMeans(g4),colMeans(g5))))
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
plot(1:2,1:2,xaxt="n",yaxt="n",main="Легенда",xlab="",ylab="")
legend("right", legend = rownames(df), col=rainbow(13), lwd=10, bty = "n",inset=c(-0.1,0))
layout(matrix(1:2,nrow=1,ncol=2))
df = t(t(data.frame(colMeans(g1),colMeans(g2),colMeans(g3),colMeans(g4),colMeans(g5))))
df
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
plot(1:2,1:2,xaxt="n",yaxt="n",main="Легенда",xlab="",ylab="")
legend("right", legend = rownames(df),cex=0.4, col=rainbow(13), lwd=10, bty = "n",inset=c(-0.1,0))
layout(matrix(1:2,nrow=1,ncol=2))
df = t(t(data.frame(colMeans(g1),colMeans(g2),colMeans(g3),colMeans(g4),colMeans(g5))))
df
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
plot(1:2,1:2,xaxt="n",yaxt="n",main="Легенда",xlab="",ylab="")
legend("center", legend = rownames(df),cex=0.4, col=rainbow(13), lwd=10, bty = "n")
layout(matrix(1:2,nrow=1,ncol=2))
df = t(t(data.frame(colMeans(g1),colMeans(g2),colMeans(g3),colMeans(g4),colMeans(g5))))
df
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
plot(1:2,1:2,xaxt="n",yaxt="n",main="Легенда",xlab="",ylab="")
legend("center", legend = rownames(df),cex=0.6, col=rainbow(13), lwd=10, bty = "n")
layout(matrix(1:16,nrow=4,ncol=4))
layout(matrix(1:16,nrow=4,ncol=4))
for(i in 1:(length(colnames(data))-1)){
boxplot(g1[,i])
}
layout(matrix(1:16,nrow=4,ncol=4))
layout(matrix(1:16,nrow=4,ncol=4))
layout(matrix(1:16,nrow=4,ncol=4))
for(i in 1:(length(colnames(data))-1)){
boxplot(data=g1[,i])
}
layout(matrix(1:16,nrow=4,ncol=4))
for(i in 1:(length(colnames(data))-1)){
boxplot(g1[,i],data=g1[,i])
}
g5=cbind(data_k[groups==5,],c(5))
g5
colnames(g5)[14]=c('class')
g5
g1=cbind(data_k[groups==1,],c(1))
colnames(g1)[14]=c('class')
g1
g2=cbind(data_k[groups==2,],c(2))
colnames(g2)[14]=c('class')
g2
g3=cbind(data_k[groups==3,],c(3))
colnames(g3)[14]=c('class')
g3
g4=cbind(data_k[groups==4,],c(4))
colnames(g4)[14]=c('class')
g4
g5=cbind(data_k[groups==5,],c(5))
colnames(g5)[14]=c('class')
g5
layout(matrix(1:2,nrow=1,ncol=2))
df = t(t(data.frame(colMeans(g1),colMeans(g2),colMeans(g3),colMeans(g4),colMeans(g5))))
barplot(df,main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
barplot(df[-c('class')],main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
df
barplot(df[-c('class'),],main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
barplot(df[-14,],main='heart illnesses',col=rainbow(13),bty='n',beside=TRUE)
layout(matrix(1:16,nrow=4,ncol=4))
for(i in 1:(length(colnames(data))-1)){
boxplot(df[,i]~df[,14],data=df[,i])
}
layout(matrix(1:16,nrow=4,ncol=4))
for(i in 1:(length(colnames(data))-1)){
boxplot(df[,i]~df[,14],data=df)
}
layout(matrix(1:16,nrow=4,ncol=4))
for(i in 1:(length(colnames(data))-1)){
boxplot(df[i,]~df[14,],data=df)
}
layout(matrix(1:16,nrow=4,ncol=4))
for(i in 1:(length(colnames(data))-1)){
boxplot(df[,i]~df[,14],data=df)
}
df[,14]
df
data_classes = rbind(g1,g2,g3,g4,g5)
data_classes
options(max.print=999999)
data_classes = rbind(g1,g2,g3,g4,g5)
data_classes
layout(matrix(1:16,nrow=4,ncol=4))
data_classes = rbind(g1,g2,g3,g4,g5)
data_classes
layout(matrix(1:16,nrow=4,ncol=4))
for(i in 1:(length(colnames(data))-1)){
boxplot(data_classes[,i]~data_classes[,14],data=data_classes)
}
data_classes = rbind(g1,g2,g3,g4,g5)
data_classes
layout(matrix(1:16,nrow=4,ncol=4))
for(i in 1:(length(colnames(data))-1)){
boxplot(data_classes[,i]~data_classes[,14],data=data_classes,xlab=colnames(data)[i])
}
data_for_boxplot=cbind(data[,-14],data_classes[,14])
data_for_boxplot
data_classes = rbind(g1,g2,g3,g4,g5)
data_classes
data_for_boxplot=cbind(data[,-14],data_classes[,14])
data_for_boxplot
layout(matrix(1:16,nrow=4,ncol=4))
for(i in 1:(length(colnames(data))-1)){
boxplot(data_for_boxplot[,i]~data_for_boxplot[,14],data=data_for_boxplot,xlab=colnames(data)[i])
}
