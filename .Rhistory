allNameLinks = html_nodes(museum,"a")
Links=allNameLinks[allNameLinks %not in% ex]
museum = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
museum=museum[seq(2,length(museum),by=5)]
length(museum)
ex=html_nodes(museum,"sup>a")
allNameLinks = html_nodes(museum,"a")
Links=allNameLinks[!(allNameLinks %in% ex)]
Links
as.data.frame(Links)
as.vector(Links)
print(Links)
View(data)
View(Links)
museum = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
museum=museum[seq(2,length(museum),by=5)]
length(museum)
ex=html_nodes(museum,"sup>a")
allNameLinks = html_nodes(museum,"a")
Links=allNameLinks[!(allNameLinks %in% ex)] %>% html_attr("href")
Links
Links[!duplicated(Links)]
museum = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
museum=museum[seq(2,length(museum),by=5)]
length(museum)
ex=html_nodes(museum,"sup>a")
allNameLinks = html_nodes(museum,"a")
Links=allNameLinks[!(allNameLinks %in% ex)] %>% html_attr("href")
Links= Links[!duplicated(Links)]
print(Links)
length(museum)
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(museum),by=5)]
pictures
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures
getPictLink = function(x){
if(html_text(x)=="\n"){
return(" ")
}
else{
return(html_nodes(x,"a") %>% html_attr("href"))
}
}
pictures= getPictLink(pictures)
getPictLink = function(x){
print(html_text(x))
if(html_text(x)=="\n"){
return(" ")
}
else{
return(html_nodes(x,"a") %>% html_attr("href"))
}
}
pictures= getPictLink(pictures)
getPictLink = function(x){
print(html_text(x))
if(html_text(x)=='\n'){
return(" ")
}
else{
return(html_nodes(x,"a") %>% html_attr("href"))
}
}
pictures= getPictLink(pictures)
getPictLink = function(x){
print(html_text(x))
if(html_text(x)=='\n'){
return(" ")
}
else{
return(html_nodes(x,"a") %>% html_attr("href"))
}
}
pictures= getPictLink(pictures)
getPictLink = function(x){
print(html_text(x))
if(length(html_nodes(x,"a"))>0){
return(html_attr("href"))
}
else{
return(" ")
}
}
pictures= getPictLink(pictures)
getPictLink = function(x){
if(length(html_nodes(x,"a"))>0){
return(html_nodes(x,"a") %>% html_attr("href"))
}
else{
return(" ")
}
}
pictures= getPictLink(pictures)
print(pictures)
#Ссылки на картинки
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
print(pictures)
pictures= pictures[seq(4,length(pictures),by=5)]
print(pictures)
getPictLink = function(x){
if(length(html_nodes(x,"span>a"))>0){
return(html_nodes(x,"span>a") %>% html_attr("href"))
}
else{
return(" ")
}
}
pictures= getPictLink(pictures)
print(pictures)
getPictLink = function(x){
if(length(html_nodes(x,"span>a"))>0){
return(html_nodes(x,"span>a") %>% html_attr("href"))
}
else{
return("-1")
}
}
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= getPictLink(pictures)
print(pictures)
getPictLink = function(x){
print(x)
print(length(html_nodes(x,"span>a")))
if(length(html_nodes(x,"span>a"))>0){
return(html_nodes(x,"span>a") %>% html_attr("href"))
}
else{
return("-1")
}
}
#Ссылки на картинки
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= getPictLink(pictures)
#Ссылки на картинки
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= sapply(pictures,getPictLink)
print(pictures)
getPictLink = function(x){
print(x)
print(length(html_nodes(x,"span>a")))
if(length(html_nodes(x,"span>a"))>0){
return(html_nodes(x,"span>a") %>% html_attr("href"))
}
else{
return(" ")
}
}
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= sapply(pictures,getPictLink)
print(pictures)
getPictLink = function(x){
if(length(html_nodes(x,"span>a"))>0){
return(html_nodes(x,"span>a") %>% html_attr("href"))
}
else{
return(" ")
}
}
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= sapply(pictures,getPictLink)
print(pictures)
#Ссылки на картинки
getPictLink = function(x){
if(length(html_nodes(x,"span>a"))>0){
return(html_nodes(x,"span>a") %>% html_attr("href"))
}
else{
return(NA)
}
}
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= sapply(pictures,getPictLink)
print(pictures)
pictures = as.data.frame(PPictureLink=pictures)
pictures = as.data.frame(PictureLink=pictures)
pictures = as.data.frame(pictures,PictureLink=pictures)
print(pictures)
pictures = as.data.frame(pictures,PictureLink)
pictures = as.data.frame(pictures,PictureLink=pictures)
print(pictures)
View(pictures)
pictures = as.data.frame(PictureLink=pictures)
colnames(pictures) = c("PictureLink")
print(pictures)
Links = data.frame(Links,col.names="Link")
Links = data.frame(Links)
pictures = data.frame(PictureLink=pictures)
print(pictures)
result = cbind(data,pictures) %>% cbind(Links)
result
View(result)
museum = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
museum=museum[seq(2,length(museum),by=5)]
length(museum)
ex=html_nodes(museum,"sup>a")
allNameLinks = html_nodes(museum,"a")
Links=allNameLinks[!(allNameLinks %in% ex)] %>% html_attr("href")
Links= Links[!duplicated(Links)]
Links = data.frame(Links)
print(Links)
#Ссылки на картинки
getPictLink = function(x){
if(length(html_nodes(x,"span>a"))>0){
return(html_nodes(x,"span>a") %>% html_attr("href"))
}
else{
return(NA)
}
}
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= sapply(pictures,getPictLink)
pictures = data.frame(PictureLink=pictures)
print(pictures)
result = cbind(data,pictures) %>% cbind(Links)
result
View(result)
View(result)
pictures = paste(c("https://ru.m.wikipedia.org/"),pictures,sep="")
print(pictures)
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= sapply(pictures,getPictLink)
pictures = data.frame(PictureLink=pictures)
pictures = apply(pictures,2,paste(c("https://ru.m.wikipedia.org/"),sep=""))
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= sapply(pictures,getPictLink) %>% (paste(c("https://ru.m.wikipedia.org/"),sep=""))
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= sapply(pictures,getPictLink) %>% paste(c("https://ru.m.wikipedia.org/"),sep="")
pictures = data.frame(PictureLink=pictures)
print(pictures)
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= sapply(pictures,getPictLink)
pictures = data.frame(PictureLink=pictures)
print(pictures)
getPictLink = function(x){
if(length(html_nodes(x,"span>a"))>0){
link = (html_nodes(x,"span>a") %>% html_attr("href"))
return(paste(c("https://ru.m.wikipedia.org/"),link,sep=""))
}
else{
return(NA)
}
}
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= sapply(pictures,getPictLink)
pictures = data.frame(PictureLink=pictures)
print(pictures)
paste(c("https://ru.m.wikipedia.org/"),Links,sep="")
museum = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
museum=museum[seq(2,length(museum),by=5)]
length(museum)
ex=html_nodes(museum,"sup>a")
allNameLinks = html_nodes(museum,"a")
Links=allNameLinks[!(allNameLinks %in% ex)] %>% html_attr("href")
Links= Links[!duplicated(Links)]
Links = data.frame(paste(c("https://ru.m.wikipedia.org/"),Links,sep=""))
print(Links)
url = "https://ru.m.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D0%BC%D1%83%D0%B7%D0%B5%D0%B5%D0%B2_%D0%A0%D0%BE%D1%81%D1%82%D0%BE%D0%B2%D1%81%D0%BA%D0%BE%D0%B9_%D0%BE%D0%B1%D0%BB%D0%B0%D1%81%D1%82%D0%B8"
data = read_html(url) %>% html_nodes("div section table") %>% html_table() %>% as.data.frame()
data = data[c(-1,-5,-6)]
dim(data)
data
#Ссылки на музеи
museum = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
museum=museum[seq(2,length(museum),by=5)]
length(museum)
ex=html_nodes(museum,"sup>a")
allNameLinks = html_nodes(museum,"a")
Links=allNameLinks[!(allNameLinks %in% ex)] %>% html_attr("href")
Links= Links[!duplicated(Links)]
Links = data.frame(paste(c("https://ru.m.wikipedia.org/"),Links,sep=""))
print(Links)
#Ссылки на картинки
getPictLink = function(x){
if(length(html_nodes(x,"span>a"))>0){
link = (html_nodes(x,"span>a") %>% html_attr("href"))
return(paste(c("https://ru.m.wikipedia.org/"),link,sep=""))
}
else{
return(NA)
}
}
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= sapply(pictures,getPictLink)
pictures = data.frame(PictureLink=pictures)
print(pictures)
result = cbind(data,pictures) %>% cbind(Links)
result
View(result)
url = "https://ru.m.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D0%BC%D1%83%D0%B7%D0%B5%D0%B5%D0%B2_%D0%A0%D0%BE%D1%81%D1%82%D0%BE%D0%B2%D1%81%D0%BA%D0%BE%D0%B9_%D0%BE%D0%B1%D0%BB%D0%B0%D1%81%D1%82%D0%B8"
data = read_html(url) %>% html_nodes("div section table") %>% html_table() %>% as.data.frame()
data = data[c(-1,-5,-4)]
dim(data)
data
#Ссылки на музеи
museum = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
museum=museum[seq(2,length(museum),by=5)]
length(museum)
ex=html_nodes(museum,"sup>a")
allNameLinks = html_nodes(museum,"a")
Links=allNameLinks[!(allNameLinks %in% ex)] %>% html_attr("href")
Links= Links[!duplicated(Links)]
Links = data.frame(paste(c("https://ru.m.wikipedia.org/"),Links,sep=""))
print(Links)
#Ссылки на картинки
getPictLink = function(x){
if(length(html_nodes(x,"span>a"))>0){
link = (html_nodes(x,"span>a") %>% html_attr("href"))
return(paste(c("https://ru.m.wikipedia.org/"),link,sep=""))
}
else{
return(NA)
}
}
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= sapply(pictures,getPictLink)
pictures = data.frame(PictureLink=pictures)
print(pictures)
result = cbind(data,pictures) %>% cbind(Links)
result
View(result)
url = "https://ru.m.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D0%BC%D1%83%D0%B7%D0%B5%D0%B5%D0%B2_%D0%A0%D0%BE%D1%81%D1%82%D0%BE%D0%B2%D1%81%D0%BA%D0%BE%D0%B9_%D0%BE%D0%B1%D0%BB%D0%B0%D1%81%D1%82%D0%B8"
data = read_html(url) %>% html_nodes("div section table") %>% html_table() %>% as.data.frame()
data = data[c(-1,-5,-4)]
dim(data)
data
#Ссылки на музеи
museum = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
museum=museum[seq(2,length(museum),by=5)]
length(museum)
ex=html_nodes(museum,"sup>a")
allNameLinks = html_nodes(museum,"a")
Links=allNameLinks[!(allNameLinks %in% ex)] %>% html_attr("href")
Links= Links[!duplicated(Links)]
Links = data.frame(Links=paste(c("https://ru.m.wikipedia.org/"),Links,sep=""))
print(Links)
#Ссылки на картинки
getPictLink = function(x){
if(length(html_nodes(x,"span>a"))>0){
link = (html_nodes(x,"span>a") %>% html_attr("href"))
return(paste(c("https://ru.m.wikipedia.org/"),link,sep=""))
}
else{
return(NA)
}
}
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= sapply(pictures,getPictLink)
pictures = data.frame(PictureLink=pictures)
print(pictures)
result = cbind(data,pictures) %>% cbind(Links)
result
View(result)
View(result)
library(rvest)
url_data  = read_html("https://www.numbeo.com/quality-of-life/rankings_by_country.jsp?title=2021")
#Выдернули года
years = html_nodes(url_data,"select[name='title'] option") %>% html_attr("value")
years = years[years>="2014" & years<="2021"]
years
#Функция получения таблицы по ссылке
getTable = function(year){
country_names = c("Finland", "Denmark", "France", "Germany","Romania")
link = paste("https://www.numbeo.com/quality-of-life/rankings_by_country.jsp?title=",year,sep="")
url_data = read_html(link)
table = html_table(html_nodes(url_data,"div table"))[[2]] %>% as.data.frame()
table[,1]=c(1:length(table[,1]))
table=table[table$Country %in% country_names,]
table = cbind(data.frame(Year=year,table))
return(table)
}
#Создаем 1 общую таблицу
data = do.call(rbind,lapply(years,getTable))
rownames(data)=c(1:dim(data)[1])
data[data=="-"]=0
data
View(data)
View(data)
View(data)
View(data)
View(data)
createPlot=function(number,title){
plot.new()
grid(nx = NULL, ny = NULL,
lty = 1,      # Grid line type
col = "gray", # Grid line color
lwd = 1)      # Grid line width
par(new=TRUE)
print(c(min(data[,number]),max(data[,number])))
plot(c(1:length(years)),rev(data[,number][data$Country=="Finland"]),ylab=title,xlab="",type='b', lwd=2,col="green",xaxt="n",ylim=c(as.numeric(min(data[,number])),as.numeric(max(data[,number]))),
pch=20,main="Значение выбранного параметра для стран")
lines(c(1:length(years)),rev(data[,number][data$Country=="Denmark"]),col='blue',type='b',pch=20,lwd=2)
lines(c(1:length(years)),rev(data[,number][data$Country=="France"]),col='red',type='b',pch=20,lwd=2)
lines(c(1:length(years)),rev(data[,number][data$Country=="Germany"]),col='purple',type='b',pch=20,lwd=2)
lines(c(1:length(years)),rev(data[,number][data$Country=="Romania"]),col='orange',type='b',pch=20,lwd=2)
#Настроили заголовки
axis.labels = rev(years)
axis(1, at = c(1:length(years)), labels = axis.labels,las=2,cex.axis=0.8)
title(xlab="Year", line=4, cex.lab=1.2)
return("")
}
layout(matrix(1:2),nrow=1,ncol=2)
layout(matrix(1:2,nrow=1,ncol=2))
createPlot(2,"Rank")
plot(1:2,1:2,xaxt="n",yaxt="n",main="Легенда",xlab="",ylab="")
legend('topright',cex=2.7,title='Страны',c("Finland", "Denmark", "France", "Germany","Romania"),lty=c(1,1,1,1,1),pch=c(20,20,20,20,20),col=c('green','blue','red','purple','orange'))
layout(matrix(1:2,nrow=1,ncol=2))
createPlot(2,"Rank")
plot(1:2,1:2,xaxt="n",yaxt="n",main="Легенда",xlab="",ylab="")
legend('topright',cex=2.7,title='Страны',c("Finland", "Denmark", "France", "Germany","Romania"),lty=c(1,1,1,1,1),pch=c(20,20,20,20,20),col=c('green','blue','red','purple','orange'))
layout(matrix(1:2,nrow=1,ncol=2))
createPlot(2,"Rank")
plot(1:2,1:2,xaxt="n",yaxt="n",main="Легенда",xlab="",ylab="")
legend('topright',cex=2,title='Страны',c("Finland", "Denmark", "France", "Germany","Romania"),lty=c(1,1,1,1,1),pch=c(20,20,20,20,20),col=c('green','blue','red','purple','orange'))
createPlot(2,"Rank")
legend('topright',cex=2,title='Страны',c("Finland", "Denmark", "France", "Germany","Romania"),lty=c(1,1,1,1,1),pch=c(20,20,20,20,20),col=c('green','blue','red','purple','orange'))
createPlot(2,"Rank")
legend('top',cex=1,title='Страны',c("Finland", "Denmark", "France", "Germany","Romania"),lty=c(1,1,1,1,1),pch=c(20,20,20,20,20),col=c('green','blue','red','purple','orange'))
createPlot(2,"Rank")
legend('top',cex=1,title='Страны',c("Finland", "Denmark", "France", "Germany","Romania"),lty=c(1,1,1,1,1),pch=c(20,20,20,20,20),col=c('green','blue','red','purple','orange'))
createPlot(2,"Rank")
legend('top',cex=1,title='Страны',c("Finland", "Denmark", "France", "Germany","Romania"),lty=c(1,1,1,1,1),pch=c(20,20,20,20,20),col=c('green','blue','red','purple','orange'))
layout(matrix(1:6,nrow=2,ncol=3))
createPlot(4,"Country Quality.of.Life.Index")
createPlot(5,"Purchasing.Power.Index")
createPlot(6,"Safety.Index")
createPlot(7,"Health.Care.Index")
#Легенда
plot(1:2,1:2,xaxt="n",yaxt="n",main="Легенда",xlab="",ylab="")
legend('topright',cex=2.7,title='Страны',c("Finland", "Denmark", "France", "Germany","Romania"),lty=c(1,1,1,1,1),pch=c(20,20,20,20,20),col=c('green','blue','red','purple','orange'))
layout(matrix(1:6,nrow=2,ncol=3))
createPlot(4,"Country Quality.of.Life.Index")
createPlot(5,"Purchasing.Power.Index")
createPlot(6,"Safety.Index")
createPlot(7,"Health.Care.Index")
#Легенда
plot(1:2,1:2,xaxt="n",yaxt="n",main="Легенда",xlab="",ylab="")
legend('topright',cex=2.7,title='Страны',c("Finland", "Denmark", "France", "Germany","Romania"),lty=c(1,1,1,1,1),pch=c(20,20,20,20,20),col=c('green','blue','red','purple','orange'))
layout(matrix(1:6,nrow=2,ncol=3))
createPlot(8,"Cost.of.Living.Index")
createPlot(9,"Property.Price.to.Income.Ratio")
createPlot(10,"Traffic.Commute.Time.Index")
createPlot(11,"Pollution.Index")
createPlot(12,"Climate.Index")
plot(1:2,1:2,xaxt="n",yaxt="n",main="Легенда",xlab="",ylab="")
legend('topright',cex=2,title='Страны',c("Finland", "Denmark", "France", "Germany","Romania"),lty=c(1,1,1,1,1),pch=c(20,20,20,20,20),col=c('green','blue','red','purple','orange'))
#Рисуем график
layout(matrix(1:6,nrow=2,ncol=3))
createPlot(4,"Country Quality.of.Life.Index")
createPlot(5,"Purchasing.Power.Index")
createPlot(6,"Safety.Index")
createPlot(7,"Health.Care.Index")
#Легенда
plot(1:2,1:2,xaxt="n",yaxt="n",main="Легенда",xlab="",ylab="")
legend('topright',cex=2.7,title='Страны',c("Finland", "Denmark", "France", "Germany","Romania"),lty=c(1,1,1,1,1),pch=c(20,20,20,20,20),col=c('green','blue','red','purple','orange'))
layout(matrix(1:6,nrow=2,ncol=3))
createPlot(8,"Cost.of.Living.Index")
createPlot(9,"Property.Price.to.Income.Ratio")
createPlot(10,"Traffic.Commute.Time.Index")
createPlot(11,"Pollution.Index")
createPlot(12,"Climate.Index")
plot(1:2,1:2,xaxt="n",yaxt="n",main="Легенда",xlab="",ylab="")
legend('topright',cex=2,title='Страны',c("Finland", "Denmark", "France", "Germany","Romania"),lty=c(1,1,1,1,1),pch=c(20,20,20,20,20),col=c('green','blue','red','purple','orange'))
url = "https://ru.m.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D0%BC%D1%83%D0%B7%D0%B5%D0%B5%D0%B2_%D0%A0%D0%BE%D1%81%D1%82%D0%BE%D0%B2%D1%81%D0%BA%D0%BE%D0%B9_%D0%BE%D0%B1%D0%BB%D0%B0%D1%81%D1%82%D0%B8"
data = read_html(url) %>% html_nodes("div section table") %>% html_table() %>% as.data.frame()
data = data[c(-1,-5,-4)]
dim(data)
data
#Ссылки на музеи
museum = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
museum=museum[seq(2,length(museum),by=5)]
length(museum)
ex=html_nodes(museum,"sup>a")
allNameLinks = html_nodes(museum,"a")
Links=allNameLinks[!(allNameLinks %in% ex)] %>% html_attr("href")
Links= Links[!duplicated(Links)]
Links = data.frame(Links=paste(c("https://ru.m.wikipedia.org/"),Links,sep=""))
print(Links)
#Ссылки на картинки
getPictLink = function(x){
if(length(html_nodes(x,"span>a"))>0){
link = (html_nodes(x,"span>a") %>% html_attr("href"))
return(paste(c("https://ru.m.wikipedia.org/"),link,sep=""))
}
else{
return(NA)
}
}
pictures = read_html(url) %>% html_nodes("div>section>table>tbody>tr>td")
pictures= pictures[seq(4,length(pictures),by=5)]
pictures= sapply(pictures,getPictLink)
pictures = data.frame(PictureLink=pictures)
print(pictures)
result = cbind(data,pictures) %>% cbind(Links)
result
View(result)
